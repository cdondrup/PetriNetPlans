<launch>

  <arg name="move_config_file" default="$(find pepper_move_base)/conf/distances.yaml"/>
  <arg name="qual_config_file" default="$(find pepper_world_state)/conf/parsing.yaml"/>
  <!-- arg name="working_dir" default="/tmp" />
  <arg name="domain_path" default="$(find rosplan_planning_system)/common/domain.pddl" />
  <arg name="persistent" default="true" />
  <arg name="db_host" default="localhost" />
  <arg name="db_port" default="62345" />
  <arg name="db_name" default="kcl_knowledge_base" / -->

  <include file="$(find pnp_ros)/launch/pnp_ros.launch">
  </include>

  <node name="pnpgen" pkg="pnpgen_ros" type="pnpgen_server" output="screen" respawn="true"/>
  <node name="rosplan_bridge" pkg="rosplan_pnp_bridge" type="pnp_bridge.py" output="screen" respawn="true"/>
  <node name="check_human_existance" pkg="pepper_check_human_exists" type="check_human_exists.py" output="screen" respawn="true"/>
  <node name="planning_world_state_manager" pkg="pepper_world_state" type="world_state.py" output="screen" respawn="true">
    <param name="config_file" type="string" value="$(arg qual_config_file)"/>
  </node>
  <node name="say" pkg="pepper_speak" type="speak.py" output="screen" respawn="true"/>

  <include file="$(find pepper_move_base)/launch/pepper_move_base.launch">
    <arg name="config_file" value="$(arg move_config_file)" />    
  </include>
  <include file="$(find pepper_engage_human)/launch/pepper_engage_human.launch"/>

</launch>
