<launch>
  <arg name="semantic_map_name"/>
  <arg name="move_config_file" default="$(find pepper_move_base)/conf/distances.yaml"/>
  <arg name="kb_config_file" default="$(find pepper_world_state_kb)/conf/parsing.yaml"/>
  
  <include file="$(find pnp_ros)/launch/pnp_ros.launch"/>
  
  <node name="pnpgen" pkg="pnpgen_ros" type="pnpgen_server" output="screen" respawn="true"/>
  <node name="rosplan_bridge" pkg="rosplan_pnp_bridge" type="pnp_bridge.py" output="screen" respawn="true"/>
  <node name="check_human_existance" pkg="pepper_check_human_exists" type="check_human_exists.py" output="screen" respawn="true"/>
  <node name="planning_world_state_manager" pkg="pepper_world_state_kb" type="world_state.py" output="screen" respawn="true">
    <param name="config_file" type="string" value="$(arg kb_config_file)"/>
  </node>
  <node name="say" pkg="pepper_speak" type="speak.py" output="screen" respawn="true"/>

  <include file="$(find pepper_move_base)/launch/pepper_move_base.launch">
    <arg name="config_file" value="$(arg move_config_file)" />    
  </include>
  <include file="$(find pepper_route_description)/launch/pepper_route_description.launch">
    <arg name="semantic_map_name" value="$(arg semantic_map_name)" />    
  </include>
  <include file="$(find pepper_engage_human)/launch/pepper_engage_human.launch"/>

</launch>
